// Generated from ./src/lang/Calc.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class CalcLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly POW = 3;
	public static readonly MUL = 4;
	public static readonly DIV = 5;
	public static readonly MOD = 6;
	public static readonly ADD = 7;
	public static readonly SUB = 8;
	public static readonly EQUAL = 9;
	public static readonly ARROW = 10;
	public static readonly AND = 11;
	public static readonly OR = 12;
	public static readonly NOT = 13;
	public static readonly BOOLEAN = 14;
	public static readonly GT = 15;
	public static readonly LT = 16;
	public static readonly GE = 17;
	public static readonly LE = 18;
	public static readonly NUMBER = 19;
	public static readonly REAL = 20;
	public static readonly WHITESPACE = 21;
	public static readonly LETTER = 22;
	public static readonly LET = 23;
	public static readonly IN = 24;
	public static readonly END = 25;
	public static readonly VAL = 26;
	public static readonly LOCAL = 27;
	public static readonly FUN = 28;
	public static readonly FN = 29;
	public static readonly OPAR = 30;
	public static readonly CPAR = 31;
	public static readonly OBRACE = 32;
	public static readonly CBRACE = 33;
	public static readonly OSQUARE = 34;
	public static readonly CSQUARE = 35;
	public static readonly DOUBLEQUOTE = 36;
	public static readonly ASSIGNMEMT = 37;
	public static readonly APPEND = 38;
	public static readonly CONS = 39;
	public static readonly IF = 40;
	public static readonly THEN = 41;
	public static readonly ELSE = 42;
	public static readonly WHILE = 43;
	public static readonly DO = 44;
	public static readonly CHAR = 45;
	public static readonly STRING = 46;
	public static readonly INT = 47;
	public static readonly BOOL = 48;
	public static readonly REALNUM = 49;
	public static readonly Stringliteral = 50;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "POW", "MUL", "DIV", "MOD", "ADD", "SUB", "EQUAL", "ARROW", 
		"AND", "OR", "NOT", "BOOLEAN", "GT", "LT", "GE", "LE", "NUMBER", "REAL", 
		"WHITESPACE", "LETTER", "LET", "IN", "END", "VAL", "LOCAL", "FUN", "FN", 
		"OPAR", "CPAR", "OBRACE", "CBRACE", "OSQUARE", "CSQUARE", "DOUBLEQUOTE", 
		"ASSIGNMEMT", "APPEND", "CONS", "IF", "THEN", "ELSE", "WHILE", "DO", "CHAR", 
		"STRING", "INT", "BOOL", "REALNUM", "Stringliteral",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "';'", "','", "'^'", "'*'", "'/'", "'%'", "'+'", "'-'", "'='", 
		"'=>'", undefined, undefined, "'not'", undefined, "'>'", "'<'", "'>='", 
		"'<='", undefined, undefined, undefined, undefined, "'let'", "'in'", "'end'", 
		"'val'", "'local'", "'fun'", "'fn'", "'('", "')'", "'{'", "'}'", "'['", 
		"']'", "'\"'", "':='", "'@'", "'::'", "'if'", "'then'", "'else'", "'while'", 
		"'do'", "'char'", "'string'", "'int'", "'bool'", "'real'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, "POW", "MUL", "DIV", "MOD", "ADD", "SUB", 
		"EQUAL", "ARROW", "AND", "OR", "NOT", "BOOLEAN", "GT", "LT", "GE", "LE", 
		"NUMBER", "REAL", "WHITESPACE", "LETTER", "LET", "IN", "END", "VAL", "LOCAL", 
		"FUN", "FN", "OPAR", "CPAR", "OBRACE", "CBRACE", "OSQUARE", "CSQUARE", 
		"DOUBLEQUOTE", "ASSIGNMEMT", "APPEND", "CONS", "IF", "THEN", "ELSE", "WHILE", 
		"DO", "CHAR", "STRING", "INT", "BOOL", "REALNUM", "Stringliteral",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(CalcLexer._LITERAL_NAMES, CalcLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return CalcLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(CalcLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Calc.g4"; }

	// @Override
	public get ruleNames(): string[] { return CalcLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return CalcLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return CalcLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return CalcLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x024\u0130\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x03" +
		"\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03" +
		"\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03" +
		"\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03" +
		"\f\x05\f\x89\n\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r" +
		"\x03\r\x05\r\x95\n\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03" +
		"\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x05\x0F\xA4\n\x0F" +
		"\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13" +
		"\x03\x13\x03\x14\x06\x14\xB1\n\x14\r\x14\x0E\x14\xB2\x03\x15\x06\x15\xB6" +
		"\n\x15\r\x15\x0E\x15\xB7\x03\x15\x03\x15\x06\x15\xBC\n\x15\r\x15\x0E\x15" +
		"\xBD\x03\x16\x06\x16\xC1\n\x16\r\x16\x0E\x16\xC2\x03\x16\x03\x16\x03\x17" +
		"\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x1A" +
		"\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C" +
		"\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E" +
		"\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x03\"\x03#" +
		"\x03#\x03$\x03$\x03%\x03%\x03&\x03&\x03&\x03\'\x03\'\x03(\x03(\x03(\x03" +
		")\x03)\x03)\x03*\x03*\x03*\x03*\x03*\x03+\x03+\x03+\x03+\x03+\x03,\x03" +
		",\x03,\x03,\x03,\x03,\x03-\x03-\x03-\x03.\x03.\x03.\x03.\x03.\x03/\x03" +
		"/\x03/\x03/\x03/\x03/\x03/\x030\x030\x030\x030\x031\x031\x031\x031\x03" +
		"1\x032\x032\x032\x032\x032\x033\x033\x063\u012D\n3\r3\x0E3\u012E\x02\x02" +
		"\x024\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b" +
		"\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02" +
		"\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02" +
		"\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02" +
		"\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(" +
		"O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x021a\x022c\x023e\x02" +
		"4\x03\x02\x06\x03\x022;\x05\x02\v\f\x0F\x0F\"\"\x04\x02C\\c|\x05\x022" +
		";C\\c|\x02\u0139\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07" +
		"\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03" +
		"\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03" +
		"\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03" +
		"\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03" +
		"\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02" +
		"\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02" +
		"-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02" +
		"\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02" +
		"\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03" +
		"\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02" +
		"\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02" +
		"O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02" +
		"\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02" +
		"\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03" +
		"\x02\x02\x02\x02e\x03\x02\x02\x02\x03g\x03\x02\x02\x02\x05i\x03\x02\x02" +
		"\x02\x07k\x03\x02\x02\x02\tm\x03\x02\x02\x02\vo\x03\x02\x02\x02\rq\x03" +
		"\x02\x02\x02\x0Fs\x03\x02\x02\x02\x11u\x03\x02\x02\x02\x13w\x03\x02\x02" +
		"\x02\x15y\x03\x02\x02\x02\x17\x88\x03\x02\x02\x02\x19\x94\x03\x02\x02" +
		"\x02\x1B\x96\x03\x02\x02\x02\x1D\xA3\x03\x02\x02\x02\x1F\xA5\x03\x02\x02" +
		"\x02!\xA7\x03\x02\x02\x02#\xA9\x03\x02\x02\x02%\xAC\x03\x02\x02\x02\'" +
		"\xB0\x03\x02\x02\x02)\xB5\x03\x02\x02\x02+\xC0\x03\x02\x02\x02-\xC6\x03" +
		"\x02\x02\x02/\xC8\x03\x02\x02\x021\xCC\x03\x02\x02\x023\xCF\x03\x02\x02" +
		"\x025\xD3\x03\x02\x02\x027\xD7\x03\x02\x02\x029\xDD\x03\x02\x02\x02;\xE1" +
		"\x03\x02\x02\x02=\xE4\x03\x02\x02\x02?\xE6\x03\x02\x02\x02A\xE8\x03\x02" +
		"\x02\x02C\xEA\x03\x02\x02\x02E\xEC\x03\x02\x02\x02G\xEE\x03\x02\x02\x02" +
		"I\xF0\x03\x02\x02\x02K\xF2\x03\x02\x02\x02M\xF5\x03\x02\x02\x02O\xF7\x03" +
		"\x02\x02\x02Q\xFA\x03\x02\x02\x02S\xFD\x03\x02\x02\x02U\u0102\x03\x02" +
		"\x02\x02W\u0107\x03\x02\x02\x02Y\u010D\x03\x02\x02\x02[\u0110\x03\x02" +
		"\x02\x02]\u0115\x03\x02\x02\x02_\u011C\x03\x02\x02\x02a\u0120\x03\x02" +
		"\x02\x02c\u0125\x03\x02\x02\x02e\u012A\x03\x02\x02\x02gh\x07=\x02\x02" +
		"h\x04\x03\x02\x02\x02ij\x07.\x02\x02j\x06\x03\x02\x02\x02kl\x07`\x02\x02" +
		"l\b\x03\x02\x02\x02mn\x07,\x02\x02n\n\x03\x02\x02\x02op\x071\x02\x02p" +
		"\f\x03\x02\x02\x02qr\x07\'\x02\x02r\x0E\x03\x02\x02\x02st\x07-\x02\x02" +
		"t\x10\x03\x02\x02\x02uv\x07/\x02\x02v\x12\x03\x02\x02\x02wx\x07?\x02\x02" +
		"x\x14\x03\x02\x02\x02yz\x07?\x02\x02z{\x07@\x02\x02{\x16\x03\x02\x02\x02" +
		"|}\x07(\x02\x02}\x89\x07(\x02\x02~\x7F\x07c\x02\x02\x7F\x80\x07p\x02\x02" +
		"\x80\x89\x07f\x02\x02\x81\x82\x07c\x02\x02\x82\x83\x07p\x02\x02\x83\x84" +
		"\x07f\x02\x02\x84\x85\x07c\x02\x02\x85\x86\x07n\x02\x02\x86\x87\x07u\x02" +
		"\x02\x87\x89\x07q\x02\x02\x88|\x03\x02\x02\x02\x88~\x03\x02\x02\x02\x88" +
		"\x81\x03\x02\x02\x02\x89\x18\x03\x02\x02\x02\x8A\x8B\x07~\x02\x02\x8B" +
		"\x95\x07~\x02\x02\x8C\x8D\x07q\x02\x02\x8D\x95\x07t\x02\x02\x8E\x8F\x07" +
		"q\x02\x02\x8F\x90\x07t\x02\x02\x90\x91\x07g\x02\x02\x91\x92\x07n\x02\x02" +
		"\x92\x93\x07u\x02\x02\x93\x95\x07g\x02\x02\x94\x8A\x03\x02\x02\x02\x94" +
		"\x8C\x03\x02\x02\x02\x94\x8E\x03\x02\x02\x02\x95\x1A\x03\x02\x02\x02\x96" +
		"\x97\x07p\x02\x02\x97\x98\x07q\x02\x02\x98\x99\x07v\x02\x02\x99\x1C\x03" +
		"\x02\x02\x02\x9A\x9B\x07v\x02\x02\x9B\x9C\x07t\x02\x02\x9C\x9D\x07w\x02" +
		"\x02\x9D\xA4\x07g\x02\x02\x9E\x9F\x07h\x02\x02\x9F\xA0\x07c\x02\x02\xA0" +
		"\xA1\x07n\x02\x02\xA1\xA2\x07u\x02\x02\xA2\xA4\x07g\x02\x02\xA3\x9A\x03" +
		"\x02\x02\x02\xA3\x9E\x03\x02\x02\x02\xA4\x1E\x03\x02\x02\x02\xA5\xA6\x07" +
		"@\x02\x02\xA6 \x03\x02\x02\x02\xA7\xA8\x07>\x02\x02\xA8\"\x03\x02\x02" +
		"\x02\xA9\xAA\x07@\x02\x02\xAA\xAB\x07?\x02\x02\xAB$\x03\x02\x02\x02\xAC" +
		"\xAD\x07>\x02\x02\xAD\xAE\x07?\x02\x02\xAE&\x03\x02\x02\x02\xAF\xB1\t" +
		"\x02\x02\x02\xB0\xAF\x03\x02\x02\x02\xB1\xB2\x03\x02\x02\x02\xB2\xB0\x03" +
		"\x02\x02\x02\xB2\xB3\x03\x02\x02\x02\xB3(\x03\x02\x02\x02\xB4\xB6\t\x02" +
		"\x02\x02\xB5\xB4\x03\x02\x02\x02\xB6\xB7\x03\x02\x02\x02\xB7\xB5\x03\x02" +
		"\x02\x02\xB7\xB8\x03\x02\x02\x02\xB8\xB9\x03\x02\x02\x02\xB9\xBB\x070" +
		"\x02\x02\xBA\xBC\t\x02\x02\x02\xBB\xBA\x03\x02\x02\x02\xBC\xBD\x03\x02" +
		"\x02\x02\xBD\xBB\x03\x02\x02\x02\xBD\xBE\x03\x02\x02\x02\xBE*\x03\x02" +
		"\x02\x02\xBF\xC1\t\x03\x02\x02\xC0\xBF\x03\x02\x02\x02\xC1\xC2\x03\x02" +
		"\x02\x02\xC2\xC0\x03\x02\x02\x02\xC2\xC3\x03\x02\x02\x02\xC3\xC4\x03\x02" +
		"\x02\x02\xC4\xC5\b\x16\x02\x02\xC5,\x03\x02\x02\x02\xC6\xC7\t\x04\x02" +
		"\x02\xC7.\x03\x02\x02\x02\xC8\xC9\x07n\x02\x02\xC9\xCA\x07g\x02\x02\xCA" +
		"\xCB\x07v\x02\x02\xCB0\x03\x02\x02\x02\xCC\xCD\x07k\x02\x02\xCD\xCE\x07" +
		"p\x02\x02\xCE2\x03\x02\x02\x02\xCF\xD0\x07g\x02\x02\xD0\xD1\x07p\x02\x02" +
		"\xD1\xD2\x07f\x02\x02\xD24\x03\x02\x02\x02\xD3\xD4\x07x\x02\x02\xD4\xD5" +
		"\x07c\x02\x02\xD5\xD6\x07n\x02\x02\xD66\x03\x02\x02\x02\xD7\xD8\x07n\x02" +
		"\x02\xD8\xD9\x07q\x02\x02\xD9\xDA\x07e\x02\x02\xDA\xDB\x07c\x02\x02\xDB" +
		"\xDC\x07n\x02\x02\xDC8\x03\x02\x02\x02\xDD\xDE\x07h\x02\x02\xDE\xDF\x07" +
		"w\x02\x02\xDF\xE0\x07p\x02\x02\xE0:\x03\x02\x02\x02\xE1\xE2\x07h\x02\x02" +
		"\xE2\xE3\x07p\x02\x02\xE3<\x03\x02\x02\x02\xE4\xE5\x07*\x02\x02\xE5>\x03" +
		"\x02\x02\x02\xE6\xE7\x07+\x02\x02\xE7@\x03\x02\x02\x02\xE8\xE9\x07}\x02" +
		"\x02\xE9B\x03\x02\x02\x02\xEA\xEB\x07\x7F\x02\x02\xEBD\x03\x02\x02\x02" +
		"\xEC\xED\x07]\x02\x02\xEDF\x03\x02\x02\x02\xEE\xEF\x07_\x02\x02\xEFH\x03" +
		"\x02\x02\x02\xF0\xF1\x07$\x02\x02\xF1J\x03\x02\x02\x02\xF2\xF3\x07<\x02" +
		"\x02\xF3\xF4\x07?\x02\x02\xF4L\x03\x02\x02\x02\xF5\xF6\x07B\x02\x02\xF6" +
		"N\x03\x02\x02\x02\xF7\xF8\x07<\x02\x02\xF8\xF9\x07<\x02\x02\xF9P\x03\x02" +
		"\x02\x02\xFA\xFB\x07k\x02\x02\xFB\xFC\x07h\x02\x02\xFCR\x03\x02\x02\x02" +
		"\xFD\xFE\x07v\x02\x02\xFE\xFF\x07j\x02\x02\xFF\u0100\x07g\x02\x02\u0100" +
		"\u0101\x07p\x02\x02\u0101T\x03\x02\x02\x02\u0102\u0103\x07g\x02\x02\u0103" +
		"\u0104\x07n\x02\x02\u0104\u0105\x07u\x02\x02\u0105\u0106\x07g\x02\x02" +
		"\u0106V\x03\x02\x02\x02\u0107\u0108\x07y\x02\x02\u0108\u0109\x07j\x02" +
		"\x02\u0109\u010A\x07k\x02\x02\u010A\u010B\x07n\x02\x02\u010B\u010C\x07" +
		"g\x02\x02\u010CX\x03\x02\x02\x02\u010D\u010E\x07f\x02\x02\u010E\u010F" +
		"\x07q\x02\x02\u010FZ\x03\x02\x02\x02\u0110\u0111\x07e\x02\x02\u0111\u0112" +
		"\x07j\x02\x02\u0112\u0113\x07c\x02\x02\u0113\u0114\x07t\x02\x02\u0114" +
		"\\\x03\x02\x02\x02\u0115\u0116\x07u\x02\x02\u0116\u0117\x07v\x02\x02\u0117" +
		"\u0118\x07t\x02\x02\u0118\u0119\x07k\x02\x02\u0119\u011A\x07p\x02\x02" +
		"\u011A\u011B\x07i\x02\x02\u011B^\x03\x02\x02\x02\u011C\u011D\x07k\x02" +
		"\x02\u011D\u011E\x07p\x02\x02\u011E\u011F\x07v\x02\x02\u011F`\x03\x02" +
		"\x02\x02\u0120\u0121\x07d\x02\x02\u0121\u0122\x07q\x02\x02\u0122\u0123" +
		"\x07q\x02\x02\u0123\u0124\x07n\x02\x02\u0124b\x03\x02\x02\x02\u0125\u0126" +
		"\x07t\x02\x02\u0126\u0127\x07g\x02\x02\u0127\u0128\x07c\x02\x02\u0128" +
		"\u0129\x07n\x02\x02\u0129d\x03\x02\x02\x02\u012A\u012C\t\x04\x02\x02\u012B" +
		"\u012D\t\x05\x02\x02\u012C\u012B\x03\x02\x02\x02\u012D\u012E\x03\x02\x02" +
		"\x02\u012E\u012C\x03\x02\x02\x02\u012E\u012F\x03\x02\x02\x02\u012Ff\x03" +
		"\x02\x02\x02\v\x02\x88\x94\xA3\xB2\xB7\xBD\xC2\u012E\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!CalcLexer.__ATN) {
			CalcLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(CalcLexer._serializedATN));
		}

		return CalcLexer.__ATN;
	}

}

