// Generated from ./src/lang/Calc.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class CalcLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly POW = 5;
	public static readonly MUL = 6;
	public static readonly DIV = 7;
	public static readonly MOD = 8;
	public static readonly ADD = 9;
	public static readonly SUB = 10;
	public static readonly EQUAL = 11;
	public static readonly ARROW = 12;
	public static readonly AND = 13;
	public static readonly OR = 14;
	public static readonly NOT = 15;
	public static readonly BOOLEAN = 16;
	public static readonly GT = 17;
	public static readonly LT = 18;
	public static readonly GE = 19;
	public static readonly LE = 20;
	public static readonly NUMBER = 21;
	public static readonly REAL = 22;
	public static readonly WHITESPACE = 23;
	public static readonly LETTER = 24;
	public static readonly LET = 25;
	public static readonly IN = 26;
	public static readonly END = 27;
	public static readonly VAL = 28;
	public static readonly LOCAL = 29;
	public static readonly FUN = 30;
	public static readonly FN = 31;
	public static readonly OPAR = 32;
	public static readonly CPAR = 33;
	public static readonly OBRACE = 34;
	public static readonly CBRACE = 35;
	public static readonly DOUBLEQUOTE = 36;
	public static readonly ASSIGNMEMT = 37;
	public static readonly IF = 38;
	public static readonly THEN = 39;
	public static readonly ELSE = 40;
	public static readonly WHILE = 41;
	public static readonly DO = 42;
	public static readonly CHAR = 43;
	public static readonly STRING = 44;
	public static readonly INT = 45;
	public static readonly BOOL = 46;
	public static readonly REALNUM = 47;
	public static readonly Stringliteral = 48;
	public static readonly ID = 49;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "POW", "MUL", "DIV", "MOD", "ADD", "SUB", 
		"EQUAL", "ARROW", "AND", "OR", "NOT", "BOOLEAN", "GT", "LT", "GE", "LE", 
		"NUMBER", "REAL", "WHITESPACE", "LETTER", "LET", "IN", "END", "VAL", "LOCAL", 
		"FUN", "FN", "OPAR", "CPAR", "OBRACE", "CBRACE", "DOUBLEQUOTE", "ASSIGNMEMT", 
		"IF", "THEN", "ELSE", "WHILE", "DO", "CHAR", "STRING", "INT", "BOOL", 
		"REALNUM", "Stringliteral", "ID",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "';'", "','", "'['", "']'", "'^'", "'*'", "'/'", "'%'", "'+'", 
		"'-'", "'='", "'=>'", undefined, undefined, "'not'", undefined, "'>'", 
		"'<'", "'>='", "'<='", undefined, undefined, undefined, undefined, "'let'", 
		"'in'", "'end'", "'val'", "'local'", "'fun'", "'fn'", "'('", "')'", "'{'", 
		"'}'", "'\"'", "':='", "'if'", "'then'", "'else'", "'while'", "'do'", 
		"'char'", "'string'", "'int'", "'bool'", "'real'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, "POW", "MUL", "DIV", 
		"MOD", "ADD", "SUB", "EQUAL", "ARROW", "AND", "OR", "NOT", "BOOLEAN", 
		"GT", "LT", "GE", "LE", "NUMBER", "REAL", "WHITESPACE", "LETTER", "LET", 
		"IN", "END", "VAL", "LOCAL", "FUN", "FN", "OPAR", "CPAR", "OBRACE", "CBRACE", 
		"DOUBLEQUOTE", "ASSIGNMEMT", "IF", "THEN", "ELSE", "WHILE", "DO", "CHAR", 
		"STRING", "INT", "BOOL", "REALNUM", "Stringliteral", "ID",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(CalcLexer._LITERAL_NAMES, CalcLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return CalcLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(CalcLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Calc.g4"; }

	// @Override
	public get ruleNames(): string[] { return CalcLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return CalcLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return CalcLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return CalcLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x023\u0130\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x03\x02\x03" +
		"\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03" +
		"\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03" +
		"\f\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03" +
		"\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x05\x0E\x8B\n\x0E\x03\x0F" +
		"\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F" +
		"\x05\x0F\x97\n\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03" +
		"\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x05\x11\xA6\n\x11" +
		"\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15" +
		"\x03\x15\x03\x16\x06\x16\xB3\n\x16\r\x16\x0E\x16\xB4\x03\x17\x06\x17\xB8" +
		"\n\x17\r\x17\x0E\x17\xB9\x03\x17\x03\x17\x06\x17\xBE\n\x17\r\x17\x0E\x17" +
		"\xBF\x03\x18\x06\x18\xC3\n\x18\r\x18\x0E\x18\xC4\x03\x18\x03\x18\x03\x19" +
		"\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1C" +
		"\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E" +
		"\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03 " +
		"\x03 \x03 \x03!\x03!\x03\"\x03\"\x03#\x03#\x03$\x03$\x03%\x03%\x03&\x03" +
		"&\x03&\x03\'\x03\'\x03\'\x03(\x03(\x03(\x03(\x03(\x03)\x03)\x03)\x03)" +
		"\x03)\x03*\x03*\x03*\x03*\x03*\x03*\x03+\x03+\x03+\x03,\x03,\x03,\x03" +
		",\x03,\x03-\x03-\x03-\x03-\x03-\x03-\x03-\x03.\x03.\x03.\x03.\x03/\x03" +
		"/\x03/\x03/\x03/\x030\x030\x030\x030\x030\x031\x031\x061\u0126\n1\r1\x0E" +
		"1\u0127\x032\x032\x072\u012C\n2\f2\x0E2\u012F\v2\x02\x02\x023\x03\x02" +
		"\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11" +
		"\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10" +
		"\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02" +
		"\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02" +
		" ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+" +
		"U\x02,W\x02-Y\x02.[\x02/]\x020_\x021a\x022c\x023\x03\x02\b\x03\x022;\x05" +
		"\x02\v\f\x0F\x0F\"\"\x04\x02C\\c|\x05\x022;C\\c|\x06\x02))C\\aac|\x07" +
		"\x02))2;C\\aac|\x02\u013A\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02" +
		"\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02" +
		"\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02" +
		"\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02" +
		"\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02" +
		"\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02" +
		"%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03" +
		"\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02" +
		"\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x02" +
		"9\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02" +
		"\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02" +
		"\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03" +
		"\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02" +
		"\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02" +
		"[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03\x02" +
		"\x02\x02\x02c\x03\x02\x02\x02\x03e\x03\x02\x02\x02\x05g\x03\x02\x02\x02" +
		"\x07i\x03\x02\x02\x02\tk\x03\x02\x02\x02\vm\x03\x02\x02\x02\ro\x03\x02" +
		"\x02\x02\x0Fq\x03\x02\x02\x02\x11s\x03\x02\x02\x02\x13u\x03\x02\x02\x02" +
		"\x15w\x03\x02\x02\x02\x17y\x03\x02\x02\x02\x19{\x03\x02\x02\x02\x1B\x8A" +
		"\x03\x02\x02\x02\x1D\x96\x03\x02\x02\x02\x1F\x98\x03\x02\x02\x02!\xA5" +
		"\x03\x02\x02\x02#\xA7\x03\x02\x02\x02%\xA9\x03\x02\x02\x02\'\xAB\x03\x02" +
		"\x02\x02)\xAE\x03\x02\x02\x02+\xB2\x03\x02\x02\x02-\xB7\x03\x02\x02\x02" +
		"/\xC2\x03\x02\x02\x021\xC8\x03\x02\x02\x023\xCA\x03\x02\x02\x025\xCE\x03" +
		"\x02\x02\x027\xD1\x03\x02\x02\x029\xD5\x03\x02\x02\x02;\xD9\x03\x02\x02" +
		"\x02=\xDF\x03\x02\x02\x02?\xE3\x03\x02\x02\x02A\xE6\x03\x02\x02\x02C\xE8" +
		"\x03\x02\x02\x02E\xEA\x03\x02\x02\x02G\xEC\x03\x02\x02\x02I\xEE\x03\x02" +
		"\x02\x02K\xF0\x03\x02\x02\x02M\xF3\x03\x02\x02\x02O\xF6\x03\x02\x02\x02" +
		"Q\xFB\x03\x02\x02\x02S\u0100\x03\x02\x02\x02U\u0106\x03\x02\x02\x02W\u0109" +
		"\x03\x02\x02\x02Y\u010E\x03\x02\x02\x02[\u0115\x03\x02\x02\x02]\u0119" +
		"\x03\x02\x02\x02_\u011E\x03\x02\x02\x02a\u0123\x03\x02\x02\x02c\u0129" +
		"\x03\x02\x02\x02ef\x07=\x02\x02f\x04\x03\x02\x02\x02gh\x07.\x02\x02h\x06" +
		"\x03\x02\x02\x02ij\x07]\x02\x02j\b\x03\x02\x02\x02kl\x07_\x02\x02l\n\x03" +
		"\x02\x02\x02mn\x07`\x02\x02n\f\x03\x02\x02\x02op\x07,\x02\x02p\x0E\x03" +
		"\x02\x02\x02qr\x071\x02\x02r\x10\x03\x02\x02\x02st\x07\'\x02\x02t\x12" +
		"\x03\x02\x02\x02uv\x07-\x02\x02v\x14\x03\x02\x02\x02wx\x07/\x02\x02x\x16" +
		"\x03\x02\x02\x02yz\x07?\x02\x02z\x18\x03\x02\x02\x02{|\x07?\x02\x02|}" +
		"\x07@\x02\x02}\x1A\x03\x02\x02\x02~\x7F\x07(\x02\x02\x7F\x8B\x07(\x02" +
		"\x02\x80\x81\x07c\x02\x02\x81\x82\x07p\x02\x02\x82\x8B\x07f\x02\x02\x83" +
		"\x84\x07c\x02\x02\x84\x85\x07p\x02\x02\x85\x86\x07f\x02\x02\x86\x87\x07" +
		"c\x02\x02\x87\x88\x07n\x02\x02\x88\x89\x07u\x02\x02\x89\x8B\x07q\x02\x02" +
		"\x8A~\x03\x02\x02\x02\x8A\x80\x03\x02\x02\x02\x8A\x83\x03\x02\x02\x02" +
		"\x8B\x1C\x03\x02\x02\x02\x8C\x8D\x07~\x02\x02\x8D\x97\x07~\x02\x02\x8E" +
		"\x8F\x07q\x02\x02\x8F\x97\x07t\x02\x02\x90\x91\x07q\x02\x02\x91\x92\x07" +
		"t\x02\x02\x92\x93\x07g\x02\x02\x93\x94\x07n\x02\x02\x94\x95\x07u\x02\x02" +
		"\x95\x97\x07g\x02\x02\x96\x8C\x03\x02\x02\x02\x96\x8E\x03\x02\x02\x02" +
		"\x96\x90\x03\x02\x02\x02\x97\x1E\x03\x02\x02\x02\x98\x99\x07p\x02\x02" +
		"\x99\x9A\x07q\x02\x02\x9A\x9B\x07v\x02\x02\x9B \x03\x02\x02\x02\x9C\x9D" +
		"\x07v\x02\x02\x9D\x9E\x07t\x02\x02\x9E\x9F\x07w\x02\x02\x9F\xA6\x07g\x02" +
		"\x02\xA0\xA1\x07h\x02\x02\xA1\xA2\x07c\x02\x02\xA2\xA3\x07n\x02\x02\xA3" +
		"\xA4\x07u\x02\x02\xA4\xA6\x07g\x02\x02\xA5\x9C\x03\x02\x02\x02\xA5\xA0" +
		"\x03\x02\x02\x02\xA6\"\x03\x02\x02\x02\xA7\xA8\x07@\x02\x02\xA8$\x03\x02" +
		"\x02\x02\xA9\xAA\x07>\x02\x02\xAA&\x03\x02\x02\x02\xAB\xAC\x07@\x02\x02" +
		"\xAC\xAD\x07?\x02\x02\xAD(\x03\x02\x02\x02\xAE\xAF\x07>\x02\x02\xAF\xB0" +
		"\x07?\x02\x02\xB0*\x03\x02\x02\x02\xB1\xB3\t\x02\x02\x02\xB2\xB1\x03\x02" +
		"\x02\x02\xB3\xB4\x03\x02\x02\x02\xB4\xB2\x03\x02\x02\x02\xB4\xB5\x03\x02" +
		"\x02\x02\xB5,\x03\x02\x02\x02\xB6\xB8\t\x02\x02\x02\xB7\xB6\x03\x02\x02" +
		"\x02\xB8\xB9\x03\x02\x02\x02\xB9\xB7\x03\x02\x02\x02\xB9\xBA\x03\x02\x02" +
		"\x02\xBA\xBB\x03\x02\x02\x02\xBB\xBD\x070\x02\x02\xBC\xBE\t\x02\x02\x02" +
		"\xBD\xBC\x03\x02\x02\x02\xBE\xBF\x03\x02\x02\x02\xBF\xBD\x03\x02\x02\x02" +
		"\xBF\xC0\x03\x02\x02\x02\xC0.\x03\x02\x02\x02\xC1\xC3\t\x03\x02\x02\xC2" +
		"\xC1\x03\x02\x02\x02\xC3\xC4\x03\x02\x02\x02\xC4\xC2\x03\x02\x02\x02\xC4" +
		"\xC5\x03\x02\x02\x02\xC5\xC6\x03\x02\x02\x02\xC6\xC7\b\x18\x02\x02\xC7" +
		"0\x03\x02\x02\x02\xC8\xC9\t\x04\x02\x02\xC92\x03\x02\x02\x02\xCA\xCB\x07" +
		"n\x02\x02\xCB\xCC\x07g\x02\x02\xCC\xCD\x07v\x02\x02\xCD4\x03\x02\x02\x02" +
		"\xCE\xCF\x07k\x02\x02\xCF\xD0\x07p\x02\x02\xD06\x03\x02\x02\x02\xD1\xD2" +
		"\x07g\x02\x02\xD2\xD3\x07p\x02\x02\xD3\xD4\x07f\x02\x02\xD48\x03\x02\x02" +
		"\x02\xD5\xD6\x07x\x02\x02\xD6\xD7\x07c\x02\x02\xD7\xD8\x07n\x02\x02\xD8" +
		":\x03\x02\x02\x02\xD9\xDA\x07n\x02\x02\xDA\xDB\x07q\x02\x02\xDB\xDC\x07" +
		"e\x02\x02\xDC\xDD\x07c\x02\x02\xDD\xDE\x07n\x02\x02\xDE<\x03\x02\x02\x02" +
		"\xDF\xE0\x07h\x02\x02\xE0\xE1\x07w\x02\x02\xE1\xE2\x07p\x02\x02\xE2>\x03" +
		"\x02\x02\x02\xE3\xE4\x07h\x02\x02\xE4\xE5\x07p\x02\x02\xE5@\x03\x02\x02" +
		"\x02\xE6\xE7\x07*\x02\x02\xE7B\x03\x02\x02\x02\xE8\xE9\x07+\x02\x02\xE9" +
		"D\x03\x02\x02\x02\xEA\xEB\x07}\x02\x02\xEBF\x03\x02\x02\x02\xEC\xED\x07" +
		"\x7F\x02\x02\xEDH\x03\x02\x02\x02\xEE\xEF\x07$\x02\x02\xEFJ\x03\x02\x02" +
		"\x02\xF0\xF1\x07<\x02\x02\xF1\xF2\x07?\x02\x02\xF2L\x03\x02\x02\x02\xF3" +
		"\xF4\x07k\x02\x02\xF4\xF5\x07h\x02\x02\xF5N\x03\x02\x02\x02\xF6\xF7\x07" +
		"v\x02\x02\xF7\xF8\x07j\x02\x02\xF8\xF9\x07g\x02\x02\xF9\xFA\x07p\x02\x02" +
		"\xFAP\x03\x02\x02\x02\xFB\xFC\x07g\x02\x02\xFC\xFD\x07n\x02\x02\xFD\xFE" +
		"\x07u\x02\x02\xFE\xFF\x07g\x02\x02\xFFR\x03\x02\x02\x02\u0100\u0101\x07" +
		"y\x02\x02\u0101\u0102\x07j\x02\x02\u0102\u0103\x07k\x02\x02\u0103\u0104" +
		"\x07n\x02\x02\u0104\u0105\x07g\x02\x02\u0105T\x03\x02\x02\x02\u0106\u0107" +
		"\x07f\x02\x02\u0107\u0108\x07q\x02\x02\u0108V\x03\x02\x02\x02\u0109\u010A" +
		"\x07e\x02\x02\u010A\u010B\x07j\x02\x02\u010B\u010C\x07c\x02\x02\u010C" +
		"\u010D\x07t\x02\x02\u010DX\x03\x02\x02\x02\u010E\u010F\x07u\x02\x02\u010F" +
		"\u0110\x07v\x02\x02\u0110\u0111\x07t\x02\x02\u0111\u0112\x07k\x02\x02" +
		"\u0112\u0113\x07p\x02\x02\u0113\u0114\x07i\x02\x02\u0114Z\x03\x02\x02" +
		"\x02\u0115\u0116\x07k\x02\x02\u0116\u0117\x07p\x02\x02\u0117\u0118\x07" +
		"v\x02\x02\u0118\\\x03\x02\x02\x02\u0119\u011A\x07d\x02\x02\u011A\u011B" +
		"\x07q\x02\x02\u011B\u011C\x07q\x02\x02\u011C\u011D\x07n\x02\x02\u011D" +
		"^\x03\x02\x02\x02\u011E\u011F\x07t\x02\x02\u011F\u0120\x07g\x02\x02\u0120" +
		"\u0121\x07c\x02\x02\u0121\u0122\x07n\x02\x02\u0122`\x03\x02\x02\x02\u0123" +
		"\u0125\t\x04\x02\x02\u0124\u0126\t\x05\x02\x02\u0125\u0124\x03\x02\x02" +
		"\x02\u0126\u0127\x03\x02\x02\x02\u0127\u0125\x03\x02\x02\x02\u0127\u0128" +
		"\x03\x02\x02\x02\u0128b\x03\x02\x02\x02\u0129\u012D\t\x06\x02\x02\u012A" +
		"\u012C\t\x07\x02\x02\u012B\u012A\x03\x02\x02\x02\u012C\u012F\x03\x02\x02" +
		"\x02\u012D\u012B\x03\x02\x02\x02\u012D\u012E\x03\x02\x02\x02\u012Ed\x03" +
		"\x02\x02\x02\u012F\u012D\x03\x02\x02\x02\f\x02\x8A\x96\xA5\xB4\xB9\xBF" +
		"\xC4\u0127\u012D\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!CalcLexer.__ATN) {
			CalcLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(CalcLexer._serializedATN));
		}

		return CalcLexer.__ATN;
	}

}

